Perfect ‚úÖ ‚Äî that‚Äôs a clear and fun Angular UI task!
Let‚Äôs build this step-by-step using Angular + AG Grid + Material (for the side menu and form).

We‚Äôll create:

A main layout with a sidenav (3-line menu)

A menu item ‚ÄúNew Travel Request‚Äù

A form that dynamically shows Approver 2 only when Travel Type = International

A placeholder AG Grid (optional, to show later records if you want)



---

üß± Step 1 ‚Äî Install Required Packages

In your Angular project root, run:

npm install ag-grid-community ag-grid-angular @angular/material @angular/forms

Also import Angular Material‚Äôs modules in app.module.ts.


---

üóÇÔ∏è Step 2 ‚Äî app.module.ts

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatSidenavModule } from '@angular/material/sidenav';
import { MatToolbarModule } from '@angular/material/toolbar';
import { MatIconModule } from '@angular/material/icon';
import { MatListModule } from '@angular/material/list';
import { MatButtonModule } from '@angular/material/button';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { MatSelectModule } from '@angular/material/select';
import { AgGridModule } from 'ag-grid-angular';
import { AppComponent } from './app.component';
import { TravelRequestComponent } from './travel-request/travel-request.component';

@NgModule({
  declarations: [
    AppComponent,
    TravelRequestComponent
  ],
  imports: [
    BrowserModule,
    BrowserAnimationsModule,
    FormsModule,
    ReactiveFormsModule,
    MatSidenavModule,
    MatToolbarModule,
    MatIconModule,
    MatListModule,
    MatButtonModule,
    MatFormFieldModule,
    MatInputModule,
    MatSelectModule,
    AgGridModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }


---

üß≠ Step 3 ‚Äî app.component.html

<mat-sidenav-container class="sidenav-container">
  <mat-sidenav #sidenav mode="side" class="sidenav" fixedInViewport>
    <mat-nav-list>
      <mat-list-item (click)="selectedMenu = 'new'">New Travel Request</mat-list-item>
    </mat-nav-list>
  </mat-sidenav>

  <mat-sidenav-content>
    <mat-toolbar color="primary">
      <button mat-icon-button (click)="sidenav.toggle()">
        <mat-icon>menu</mat-icon>
      </button>
      <span>Travel Portal</span>
    </mat-toolbar>

    <div class="content">
      <app-travel-request *ngIf="selectedMenu === 'new'"></app-travel-request>
    </div>
  </mat-sidenav-content>
</mat-sidenav-container>


---

üß≠ Step 4 ‚Äî app.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  selectedMenu: string = '';
}


---

üßæ Step 5 ‚Äî travel-request.component.ts

import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-travel-request',
  templateUrl: './travel-request.component.html',
  styleUrls: ['./travel-request.component.css']
})
export class TravelRequestComponent {
  travelForm: FormGroup;
  travelTypes = ['Domestic', 'International'];

  constructor(private fb: FormBuilder) {
    this.travelForm = this.fb.group({
      uid: ['', Validators.required],
      name: ['', Validators.required],
      lineManager: ['', Validators.required],
      travelType: ['', Validators.required],
      approver1: ['', Validators.required],
      approver2: ['']
    });

    this.travelForm.get('travelType')?.valueChanges.subscribe(type => {
      if (type === 'International') {
        this.travelForm.get('approver2')?.setValidators(Validators.required);
      } else {
        this.travelForm.get('approver2')?.clearValidators();
      }
      this.travelForm.get('approver2')?.updateValueAndValidity();
    });
  }

  onSubmit() {
    if (this.travelForm.valid) {
      console.log('Travel Request Submitted:', this.travelForm.value);
      alert('Travel request submitted successfully!');
      this.travelForm.reset();
    } else {
      alert('Please fill all required fields!');
    }
  }
}


---

üßæ Step 6 ‚Äî travel-request.component.html

<div class="form-container">
  <h2>Add your travel details</h2>
  <form [formGroup]="travelForm" (ngSubmit)="onSubmit()">
    <mat-form-field appearance="outline" class="full-width">
      <mat-label>UID</mat-label>
      <input matInput formControlName="uid" placeholder="Enter UID">
    </mat-form-field>

    <mat-form-field appearance="outline" class="full-width">
      <mat-label>Name</mat-label>
      <input matInput formControlName="name" placeholder="Enter your name">
    </mat-form-field>

    <mat-form-field appearance="outline" class="full-width">
      <mat-label>Line Manager Name</mat-label>
      <input matInput formControlName="lineManager" placeholder="Enter manager name">
    </mat-form-field>

    <mat-form-field appearance="outline" class="full-width">
      <mat-label>Travel Type</mat-label>
      <mat-select formControlName="travelType">
        <mat-option *ngFor="let type of travelTypes" [value]="type">{{ type }}</mat-option>
      </mat-select>
    </mat-form-field>

    <mat-form-field appearance="outline" class="full-width">
      <mat-label>Approver 1</mat-label>
      <input matInput formControlName="approver1" placeholder="Enter approver 1 name">
    </mat-form-field>

    <mat-form-field *ngIf="travelForm.get('travelType')?.value === 'International'" appearance="outline" class="full-width">
      <mat-label>Approver 2</mat-label>
      <input matInput formControlName="approver2" placeholder="Enter approver 2 name">
    </mat-form-field>

    <button mat-raised-button color="primary" type="submit">Submit</button>
  </form>
</div>


---

üé® Step 7 ‚Äî Basic CSS (travel-request.component.css)

.form-container {
  max-width: 500px;
  margin: 20px auto;
  background: #fafafa;
  padding: 20px;
  border-radius: 12px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.full-width {
  width: 100%;
  margin-bottom: 15px;
}


---

üß≠ Step 8 ‚Äî app.component.css

.sidenav-container {
  height: 100vh;
}

.sidenav {
  width: 220px;
}

.content {
  padding: 20px;
}


---

Would you like me to extend this next with an AG Grid table below the form showing submitted travel requests (like a small record list)?
It‚Äôll make the page feel more complete.
