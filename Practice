import pandas as pd
import gradio as gr

def reconcile_files(file1, file2, key_column):
    # Load CSVs
    df1 = pd.read_csv(file1)
    df2 = pd.read_csv(file2)

    if key_column not in df1.columns or key_column not in df2.columns:
        return f"Key column '{key_column}' not found in one or both files."

    # Set index to key column for matching
    df1.set_index(key_column, inplace=True)
    df2.set_index(key_column, inplace=True)

    # Align on keys
    all_keys = sorted(set(df1.index).union(set(df2.index)))
    
    comparison_results = []

    for key in all_keys:
        row1 = df1.loc[key] if key in df1.index else None
        row2 = df2.loc[key] if key in df2.index else None

        if row1 is None:
            comparison_results.append(f"{key} - Missing in File 1")
        elif row2 is None:
            comparison_results.append(f"{key} - Missing in File 2")
        elif row1.equals(row2):
            comparison_results.append(f"{key} - Match")
        else:
            mismatches = []
            for col in df1.columns:
                val1 = row1[col] if col in row1 else 'N/A'
                val2 = row2[col] if col in row2 else 'N/A'
                if val1 != val2:
                    mismatches.append(f"{col}: {val1} != {val2}")
            mismatch_details = "; ".join(mismatches)
            comparison_results.append(f"{key} - Mismatch -> {mismatch_details}")
    
    return "\n".join(comparison_results)

# Gradio Interface
iface = gr.Interface(
    fn=reconcile_files,
    inputs=[
        gr.File(label="CSV File 1"),
        gr.File(label="CSV File 2"),
        gr.Textbox(label="Key Column (e.g., TransactionID)")
    ],
    outputs="text",
    title="CSV Reconciliation Tool",
    description="Compares two CSV files using 1:1 matching based on a key column"
)

if __name__ == "__main__":
    iface.launch()
