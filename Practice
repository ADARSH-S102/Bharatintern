import pandas as pd
import gradio as gr

def extract_algo_keys(df):
    return df['Agreement_name'].astype(str).apply(
        lambda x: x.replace('_RIMR', '3CR')
                  .replace('_RIMP', '3CP')
                  .replace(" ", "")
                  .strip()
    ).tolist()

def extract_star_keys(df):
    return df.apply(
        lambda row: (str(row['CRDS Party Code']).strip().replace(" ", "") +
                     "3" +
                     str(row['Post Direction']).strip().replace(" ", "")),
        axis=1
    ).tolist()

def reconcile_files(algo_file, star_file):
    df_algo = pd.read_csv(algo_file).astype(str)
    df_star = pd.read_csv(star_file).astype(str)

    algo_keys = extract_algo_keys(df_algo)
    star_keys = extract_star_keys(df_star)

    max_len = max(len(algo_keys), len(star_keys))
    result = []

    for i in range(max_len):
        algo_key = algo_keys[i] if i < len(algo_keys) else "<Missing>"
        star_key = star_keys[i] if i < len(star_keys) else "<Missing>"
        status = "Match" if algo_key == star_key else "Mismatch"
        result.append({
            "Row": i + 1,
            "ALGO Key": algo_key,
            "STAR Key": star_key,
            "Status": status
        })

    return pd.DataFrame(result)

# Gradio Interface
demo = gr.Interface(
    fn=reconcile_files,
    inputs=[
        gr.File(label="Upload ALGO CSV File"),
        gr.File(label="Upload STAR CSV File")
    ],
    outputs=gr.Dataframe(label="Comparison Result"),
    title="Reconciliation App - 1:1 Matching",
    description="Upload ALGO and STAR CSV files. Keys are normalized and compared row-wise."
)

demo.launch()

